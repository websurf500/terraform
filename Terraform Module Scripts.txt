Modules in Terraform
====================

Create a new project in VS code & name it as "05_Terraform_Project"

Create a sub directory or a child module inside "05_Terraform_Project" & name it as "modules" - This is an optional directory/child module creation.

Under "modules" directory create 2 more child modules - ec2 & s3

Under each child module create some config files along with root module config files as shown below:

05_Terraform_Project   -> Root Module
  modules              -> Optional Child Module
    ec2                -> Child Module
      input.tf       ---|
      main.tf        ---|-> ec2 Config files
      output.tf      ---|

    s3                 -> Child Module
      input.tf       ---|-> s3 Config files
      main.tf        ---|-> s3 Config files


    main.tf            ->   root module config files     
    provider.tf        ->   platform config file
    output.tf          ->   root module output config file 




First we need to configure the provider.tf
==========================================
# provider.tf

provider "aws" {
  region     = "ap-south-1"
  access_key = "AKIAWOAVSUU7MZO24GGV"
  secret_key = "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"
}


Now we need to write the ec2 module input.tf
=============================================

#input.tf

variable "ami" {
    description = "amazon machine image"
    default = "ami-0fd05997b4dff7aac"
}
variable "instance_type" {
    description = "what is the instance type"
    default = "t2.micro"
}
variable "key_name" {
    description = "my keypair name"
    default = "terraformkeypair"
}



Now we need to write the ec2 module main.tf
============================================

# main.tf

resource "aws_instance" "scopedindiavm" {
  ami             = "${var.ami}"
  instance_type   = "${var.instance_type}"
  key_name        = "${var.key_name}"
  security_groups = ["default"]
  tags = {
    Name = "linuxvm"
  }

}

Now we need to write the ec2 module output.tf
==============================================

# output.tf

output "ec2_vm_public_ip" {
   value = aws_instance.scopedindiavm.public_ip
}

output "ec2_vm_private_ip" {
   value = aws_instance.scopedindiavm.private_ip
}
output "ec2_vm_subnet_id" {
    value = aws_instance.scopedindiavm.subnet_id
}



Now we need to write the root module main.tf
============================================

# main.tf
   
module "my-ec2" {
  source = "./modules/ec2"
}
module "my-s3" {
  source = "./modules/s3"
}



Now we need to write the root module output.tf
==============================================

# output.tf

output "ec2_vm_public_ip" {
  value = module.my-ec2.ec2_vm_public_ip
}

output "ec2_vm_private_ip" {
  value = module.my-ec2.ec2_vm_private_ip

}
output "ec2_vm_subnet_id" {
  value = module.my-ec2.ec2_vm_subnet_id
}


Now we need to write the s3 child module input.tf
=================================================

# input.tf

variable "bucket_name" {
   default = "scopeindias3bucket1"
  }
   
Now we need to write the s3 child module main.tf
=================================================

# main.tf

resource "aws_s3_bucket" "scopeindia_s3_bucket" {
    bucket = "${var.bucket_name}"
    versioning {
     enabled = true
    }
  }

